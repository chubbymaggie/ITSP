Timestamp,TA-ID,How much experience do you have in programming (excluding experience of programming in Bachelors' classes)?,How would you rate your level of skill in C programming,"For a typical buggy submission, give the % of total time you spent during evaluation task for the following [Bug reproduction/understanding]","For a typical buggy submission, give the % of total time you spent during evaluation task for the following [Bug diagnosis/ localization]","For a typical buggy submission, give the % of total time you spent during evaluation task for the following [Bug fixing]",What is your approach to Bug diagnosis and fixing?,"What properties should an auto generated bug diagnosis have? (A ""diagnosis"" tells you about the error, NOT how to fix it)",What properties should an auto generated bug- fix have? (bug-fix: The actual steps to repair a diagnosed error),What features should an automated bug diagnosis tool have?,What features should an automated bug-fixing tool have?,"If you  are asked  to design  a ""practical""  automated  tutor/TA to help students identify/repair their  bugs,  what kind of suggestions would it provide? ","Students make the following three kinds of errors: syntactic errors, semantic errors, and goal errors. Which errors do you find difficult to identify and wish to get help from a tool while grading?  "
02/10/17 9:31,1,> 1 year but <= 2 years,3,<= 25 %,<=50 %,<= 25 %,"Systematically going line by line, start to end",it should identify all of the bugs that are present in the code.,without altering the logic too much it should be able to diagnose it,easy to operate with,able to fix all the hidden bugs.,it should convey clear meaning. terminology should be easy. ,"Semantic Error, Goal Errors"
02/10/17 13:46,2,> 1 year but <= 2 years,4,<= 25 %,<=50 %,<= 25 %,Heuristically analysing blocks of code,suggestions for the auto correct,sorted in best order,bug localzation,bug suggestion reporting,control comparison to that of the actual program ,Semantic Error
02/10/17 14:03,3,> 1 year but <= 2 years,3,<=10 %,> 50%,<=10 %,Heuristically analysing blocks of code,Locate the error,Give possible correct alternatives,It should permit user suggestions for the diagnosis,should suggest a large number of correct alternatives,suggestions on avoiding the general misconceptions of the goal. ,"Semantic Error, Goal Errors"
02/06/17 18:14,4,> 1 year but <= 2 years,3,<= 25 %,<= 25 %,<= 25 %,Heuristically analysing blocks of code,Where exactly the bug is,Suggestions for correction,Hint of possible bugs,Suggestions of correction,Suggestion about what are the possible bugs. In debug mode automatically list the value of vriables,Goal Errors
02/10/17 13:38,5,More than 4 years,4,<= 25 %,<=50 %,<=10 %,Heuristically analysing blocks of code,to locate the part of the program where the bug is,that it can correct the bug,It can search the bug effectively and report the lines where the bug may be present,It can fix the bug effectively - to present the lines of the code where the bug is and recommend the replacement lines ,it should be able to correctly point out bugs and not completely fixing the bugs,Semantic Error
02/10/17 13:44,6,<= 6 months,2,<=50 %,<= 25 %,> 50%,Heuristically analysing blocks of code,localisation,simple instructions,simplicity,responsive,pointing out the areas of incorrect/inefficient code,Semantic Error
2/16/2017 22:21:51,7,> 1 year but <= 2 years,5,<=10 %,> 50%,<= 25 %,"Systematically going line by line, start to end",It should tell all the errors..Even the silliest one.,It should tell all the relevant steps,"It should tell all the errors, correct them if possible, if not should tell all the relevant steps",It should correct all the errors.,"It should tell all the syntax errors, should be able to point the silly logical errors(for eg infinite loop), it is not necessary that it should be good in correcting all types of logical errors.",Semantic Error
02/09/17 21:35,8,> 1 year but <= 2 years,3,<= 25 %,<= 25 %,<=50 %,Heuristically analysing blocks of code,Exact statement and variable causing the problem,Full stack trace,It should put checkpoints to check the state where the program is creating problem,Re-run the program from the last failure point,It should tell what type of error student is doing and also tell the possible reason for that,Semantic Error
02/10/17 13:33,9,> 2 years but <= 4 years,4,<= 25 %,<=50 %,<=10 %,Heuristically analysing blocks of code,It should tell us about all syntax related errors.,Suggestions which can repairs the errors . ,Should identify most common errors . , Should fix the error in simplest way . ,It should identify most common errors . ,"Syntax Error, Goal Errors"
02/10/17 15:32,10,> 2 years but <= 4 years,4,> 50%,<=50 %,> 50%,Trial and Error,It should provide the proper location and description on bug,It should work for atleast syntax error.,It should be able to correctly identify the bug especially if the logical error is causing the crashing of program.,"Fixing syntax error, auto indentation ,spell check.",To repair syntax error and problem associated with indention.Auto indentation and spell check should be provided.,"Syntax Error, Semantic Error"
02/10/17 13:41,11,<= 6 months,3,<=50 %,<= 25 %,<=10 %,Heuristically analysing blocks of code,"Find the location of error. Eg if there is an infinite loop, specify where it is occuring",Should automatically suggest and repair all syntactic errors,Diagnose  the location and type of error,Fix all syntactic error,"Highlight all syntactic error, infinite loops",Semantic Error
02/09/17 17:08,12,> 2 years but <= 4 years,3,<= 25 %,<=50 %,<= 25 %,Heuristically analysing blocks of code,"Should not be too time consuming. Should point the probable error location, and the test case for which that buggy piece of code fails. Tell the expected values of different variables vs the actual values at the faulty locations in code.","Ask the programmer before doing a correction. Keep a backup of the old file, just in case.","A clean, simple graphical user interface. Give programmer more control, by asking programmer which lines of code or function to diagnose. Ask the programmer, values of which variables to be traced. For a certain test case, show the values of variables and expressions above them in the code itself. (or may be show them, if mouse hovers over that particular variable or expression)",Should have both modes: command line and GUI. Command line mode for geeks who prefer fast development. Graphical mode for novice programmers. ,"For academic purposes, it should act as a learning tool. Should give the student multiple options, instead of straight away pointing the fault. a) Give a hint, if student just wants a hint, so that he can find the fault himself. b) Show one test case where it is failing, or c) Show multiple test cases where code is failing, or d) Point which function is wrong d) Find the fault(s) e) Correct the faults f) Refer to which concept the student needs to work on, preferable giving the link for the lecture notes where it was discussed.",Goal Errors
02/08/17 10:50,13,> 6 months but <= 1 year,3,<=10 %,<=10 %,<=10 %,"Systematically going line by line, start to end",Localize where the error should be.,It should suggest hints before fixing.,It should highlight the localized buggy part.,It can give a popup with hints step by step and this way it should help the user to fix the bug.,"It should not give them direct solution or should not tell them their mistake directly. Instead, it should help them learn from their mistakes and make them correct by their own and that too in a very efficient way without wasting much of student's time.",Semantic Error
02/10/17 14:05,14,<= 6 months,3,<=50 %,<=50 %,<=10 %,"Systematically going line by line, start to end",should tell the exact line of bug,give all the possible options to fix it,"ease to use,simple ",simple,it should tell the syntax error,Syntax Error
02/10/17 14:16,15,> 2 years but <= 4 years,3,<=50 %,<= 25 %,<=50 %,Heuristically analysing blocks of code,Approx Location + Type of bug,Probably a generic set of instructions for a particular kind of bug,Real time reporting,"Real time suggestions(maybe) Goal oriented bug fixing","-> Syntax autocomplete-> Show simple initialization issues and function existence-> Incomplete expressions","Semantic Error, Goal Errors"
02/10/17 14:15,16,> 2 years but <= 4 years,4,> 50%,<= 25 %,<= 25 %,Heuristically analysing blocks of code,Classify errors into general categories.,Be able to fix most simple syntax errors and report any such changes.,Give a traceback like ipython.,None,No idea,"Syntax Error, Semantic Error"
2/16/2017 15:31:14,18,> 2 years but <= 4 years,4,<= 25 %,<=10 %,<=10 %,Heuristically analysing blocks of code,locate the exact location where bugs start,"easy to use, accuracy, fix the bugs etc","shows the buggy line, an alternative solution to fix, maintain a history of code",automatically fix the bugs and shows errors,go for the accuracy and not for efficiency when fixing the bugs,Syntax Error
2/16/2017 16:56:31,19,> 6 months but <= 1 year,3,<= 25 %,<= 25 %,<= 25 %,Heuristically analysing blocks of code,Segmentation faults should be detected on a particular line number same functionality as gdb for gcc,Tracing back the error would help. ,Logical bugs can be detected if the flow of the program is known before hand.  But different person can code different so bug tool should learn the flow for different t types of program flow for a particular given question.,Suggestions for correcting syntax errors. . ,Syntax errors.,Semantic Error
02/10/17 12:56,20,> 6 months but <= 1 year,3,<=50 %,<=50 %,<= 25 %,Heuristically analysing blocks of code,Language should be easy. By which anyone can identify them.,All bugs should be fixed.,Easy to use,"History/work log/commentsReports _ graphs or charts","1.Difficulty Detection2.classification of bugs",Semantic Error
02/10/17 13:08,22,> 2 years but <= 4 years,3,<=50 %,<= 25 %,<=10 %,Heuristically analysing blocks of code,easy to use,should propose required changes,should tell the smallest code block from where the bug arose,easy to use,should give possible causes of error from last year's dats,"Goal Errors, from the output, should be able to guess what could be the problem"
02/09/17 23:31,23,More than 4 years,4,<=50 %,> 50%,<=10 %,Heuristically analysing blocks of code,"A list of possible fixes would be great, along with a trace which shows why it fixes it.","Should be reasonable w.r.t the rest of the program. If it only focuses on fixing a few tests, it might give stupid fixes",Scalable. Reasonable Accuracy or less false positives,"Scalable. Reasonable fixes, should work for a larger, universal set of test cases","A set of test-cases, along with some nice interface for showing the corresponding execution trace to help them identify what's going wrong.","Semantic Error, Goal Errors"
02/09/17 19:31,24,> 2 years but <= 4 years,3,<=50 %,<=50 %,<=10 %,Heuristically analysing blocks of code,"""Diagnosis"" should be precise in showing the line number of the code. This can be extended to run time error as which loop is running infinitely.","If suppose a bug is encountered and its a common bug, then showing the steps to repair + also showing steps to make a habbit to write a code so that this error doesn't arrive in future. For eg student forgets semicolon, then there should be steps something like Write printf(); first before proceeding inside printf.",To show bug on a particular line and eventually halt.,"No automated bug fixing, just a diagonsis as the people using prutor are students.","How to do indentation, how to write non trivial comments such that student doesn't get into bug trivially.  ","Syntax Error, Infinite loop"
02/10/17 13:44,26,More than 4 years,4,<= 25 %,<=50 %,<= 25 %,Heuristically analysing blocks of code,Localise the bug effectively.,Fix the syntax errors or typos but only suggest logical or semantic changes.,"Ability to effectively localise the code segment for the possible bug. Ability to diagnose syntax errors, typos, potential memory leaks.",Fix the syntax errors or typos but only suggest logical or semantic changes.,"Help them localise the bug, possibly  help in generating instances to reproduce the bug.Point to and suggest fixes for typos and syntax errors. Give suggestions for semantic errors.","Syntax Error, Semantic Error"
02/09/17 22:30,27,> 6 months but <= 1 year,3,<= 25 %,<=50 %,<= 25 %,Heuristically analysing blocks of code,able to tell about all errors along with line number,able to fix the bugs generated by bug diagnosis,able to tell about type and cause of bug,fix the bugs instantly as made by the programmer,show the line number of bug and what is the bug,Semantic Error
02/07/17 14:37,28,> 1 year but <= 2 years,4,<=50 %,<=50 %,<=10 %,"Systematically going line by line, start to end","check infinite loops, unreachable codes",indicate the location and type of bug,indicate the location and type of bug,suggest possible solutions, specify problem statement in simpler words,Semantic Error
02/06/17 15:17,29,<= 6 months,3,<=10 %,<= 25 %,<=50 %,"Systematically going line by line, start to end",It should tell me where exactly the error is and what it is.,It should be accurate and understandable,It should tell me where exactly the error is and what it is.,It should be accurate and understandable,It should be easy to use. It should give the correct position of the bugs and help  students repair them by giving good solutions,
02/08/17 11:26,30,> 6 months but <= 1 year,3,<=10 %,<= 25 %,<=10 %,"Systematically going line by line, start to end",should be able to detect most commonly made bugs,should be able to suggest approximate fix for the detected bug,should be able to point out code which might result in infinite loops and run time errrors,should be exactly point out the part of code and suggest appropriate fix,"code that could result in run time errors,memory issues,infinite loops","Semantic Error, Goal Errors"
02/10/17 13:57,31,> 6 months but <= 1 year,3,<= 25 %,<= 25 %,<= 25 %,Heuristically analysing blocks of code,errors should be easily interpretable,taking care of small syntactic error,"displaying possibility of infinite loops, ","adding semi-colon at end of statement, using comparison operator instead of assignment in conditions","displaying possibility of infinite loops, helping with parenthesis matching","Semantic Error, Goal Errors"
02/10/17 0:52,32,> 1 year but <= 2 years,4,<=10 %,<= 25 %,<= 25 %,"Systematically going line by line, start to end","invalid memory access (array out of bound),logical error based on test cases failed",user interactive- tells about incorrect statement and also shows correct statement,highlighting the buggy statement,fixing segmentation fault and as much bugs as it can,possible buggy statement -also recommends possible correct statements,Semantic Error
02/08/17 10:54,33,> 6 months but <= 1 year,3,<= 25 %,<= 25 %,<= 25 %,Heuristically analysing blocks of code,Localize where the error should be,suggest all possible fixes ,localize the error and highlight it,generate feedbacks or hints to help student step by step to correct errors,suggest where the errors could be and give hints to resolve errors,Semantic Error
02/09/17 16:50,34,<= 6 months,2,<= 25 %,<= 25 %,<=10 %,"Systematically going line by line, start to end",error and possible solutions to fix it.,it must fix the bug using simplest code possible,easy to use,fix error in simple code,no comments ,some time logical errors
02/10/17 14:21,35,More than 4 years,4,<= 25 %,<=50 %,<=10 %,Heuristically analysing blocks of code,be more specific about the error and if possible specify the line number last executed,"alter syntactic errors automatically, guide through semantics",same as above,same as above,"instruct to try checking individual modules, specific edge cases, and values of variables in order to identify the specific bug","Syntax Error, Semantic Error, Goal Errors"
02/09/17 15:23,36,> 1 year but <= 2 years,3,<= 25 %,<=50 %,> 50%,"Systematically going line by line, start to end",it should show line number and error,hints to fix,as mentioned above,as mentioned above,"line number, error and hints to rectify",Goal Errors
2/17/2017 15:53:01,37,> 1 year but <= 2 years,3,<=50 %,<= 25 %,<= 25 %,Heuristically analysing blocks of code,"It should cover errors such as wrong syntax,infinite loops,or a segment of code is redundant.So that conditional statements can be checked.",It should fix the above mentioned problems but logical errors should be fixed by programmer first .,Apart from the mentioned properties above.The bug diagnosis should  be done to bring you closer to the solution. ,It should cover all sorts of syntactic and semantic fixing of bugs.,"Basically it should cover wrong syntax of all kinds,must",Semantic Error
2/16/2017 16:47:45,38,> 2 years but <= 4 years,3,<= 25 %,<=10 %,<= 25 %,Heuristically analysing blocks of code,"Line of the error, and expected fix, listing of possible root cause scenarios",none as such if bug diagnosis has the above mentioned properties.,"bug localization, RCA scenarios.",answered above,"autocorrection of minor and noob mistakes(missing of a semicolon), autocompletion of keywords, hints in stages (eg:- interviewbit.com)","Semantic Error, program's logic is different from the required logic."